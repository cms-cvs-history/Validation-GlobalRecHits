process EVTGEN  = {

   untracked PSet maxEvents = {untracked int32 input = 1}

   ## setup useful services
   ##
   include "Validation/GlobalRecHits/data/Random.cfi"
   include "Validation/GlobalRecHits/data/MessageLogger.cfi"
   //service = Timing { }  
   //service = SimpleMemoryCheck { untracked int32 ignoreTotal = 1 }   

   ## Step 1 : Event Generation
   ##
   ## include a particle data table (pythia has theoretical)
   //include "SimGeneral/HepPDTESSource/data/pdt.cfi"
   include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

   ## choose one of the following
   ##
   ## particle gun
   include "Validation/GlobalRecHits/data/FlatRandomEGunSource.cfi"
   replace maxEvents.input = 500
   replace FlatRandomEGunSource.PGunParameters.PartID = { 13, 11 }
   replace FlatRandomEGunSource.PGunParameters.MinE = 9.99
   replace FlatRandomEGunSource.PGunParameters.MaxE = 10.01
   replace FlatRandomEGunSource.Verbosity = 0
   ##
   ## min bias Pythia
   //include "GeneratorInterface/Pythia6Interface/data/PythiaSourceMinBias.cfi"
   //replace maxEvents.input = 10000
   //replace PythiaSource.pythiaHepMCVerbosity = false
   //replace PythiaSource.pythiaPylistVerbosity = 0

   ## smearing of the MC vertex
   ##
   ##module VtxSmeared
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi" 
   ##include "IOMC/EventVertexGenerators/data/VtxSmearedFlat.cfi"

   ## Step 2 : Output module
   ##
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "MC.root"
   }

   ## Step 3: execute path
   ##
   path p1 = { VtxSmeared }
   endpath outpath = { o1 }
	
}
